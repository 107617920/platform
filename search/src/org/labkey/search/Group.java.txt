import java.io.*;
import java.util.*;

/**
 * Created by IntelliJ IDEA.
 * User: matthewb
 * Date: Mar 11, 2010
 * Time: 12:57:43 PM
 *
 *
 *
SELECT * FROM
  (
  SELECT conso1.ISPREF AS pref1, LOWER(conso1.STR) AS str1, conso2.ISPREF AS pref2, LOWER(conso2.STR) AS str2
  FROM (SELECT * FROM umls.MRREL WHERE REL='SY') rel
    INNER JOIN (SELECT * FROM umls.MRCONSO WHERE LAT='ENG' AND STR NOT LIKE '% %' AND UPPER(STR) != STR) conso1 ON rel.AUI1=conso1.AUI
    INNER JOIN (SELECT * FROM umls.MRCONSO WHERE LAT='ENG' AND STR NOT LIKE '% %' AND UPPER(STR) != STR) conso2 on rel.AUI2=conso2.AUI
  ) AS syn
WHERE
    str1 != str2
    AND str1 != (str2||'s') AND (str1||'s') != str2 AND str1 != (str2||'es') AND (str1||'es') != str2
    AND str1 ~ '^[a-z]+$' AND str2 ~ '^[a-z]+$'
    AND NOT (str1 LIKE '%y' AND str2 LIKE '%ies') AND NOT (str1 LIKE '%ies' and str2 LIKE '%y')
ORDER BY STR1, STR2
 */
public class Group
{
    public static void main(String[] args) throws IOException
    {
        File f = new File(args[0]);
        BufferedReader r = new BufferedReader(new FileReader(f));
        String line;

        TreeMap<String, TreeSet<String>> sets = new TreeMap<String,TreeSet<String>>();

        while (null != (line = r.readLine()))
        {
            String[] ar = line.split("\t");
            String a = ar[0];
            String b = ar[1];

            if (ignore(a,b))
                continue;
            
            TreeSet<String> setA = sets.get(a);
            TreeSet<String> setB = sets.get(b);
            TreeSet<String> setMerged = new TreeSet<String>();
            if (null != setA)
                setMerged.addAll(setA);
            if (null != setB)
                setMerged.addAll(setB);
            setMerged.add(a);
            setMerged.add(b);
            for (String s : setMerged)
                sets.put(s,setMerged);
        }

        IdentityHashMap seen = new IdentityHashMap();
        for (TreeSet<String> set : sets.values())
        {
            if (seen.containsKey(set))
                continue;
            seen.put(set,true);
            for (String s : set)
            {
                System.out.print(s);
                System.out.print("\t");
            }
            System.out.print("\n");
        }
    }

    public static boolean ignore(String a, String b)
    {
        if (a.length() > b.length())
        {
            String t=a; a=b; b=t;
        }
        if (b.startsWith(a))
        {
            if (b.equals(a+"process"))
                return true;
            if (b.equals(a+"act"))
                return true;
            if (b.equals(a+"status"))
                return true;
            if (b.equals(a+"region"))
                return true;
            if (b.equals(a+"role"))
                return true;
        }
        if (b.equals("physical"+a))
            return true;
        if (ignore(a))
            return true;
        if (ignore(b))
            return true;
        return false;
    }

    public static boolean ignore(String a)
    {
        if (a.endsWith("process") && !a.equals("process")) return true;
        if (a.startsWith("actualnegative")) return true;
        if (a.startsWith("articleof")) return true;
        if (a.endsWith("judgedstate")) return true;
        if (a.startsWith("negative") && !a.equals("negative")) return true;
        if (a.endsWith("region")) return true;
        return false;
    }
}
