<%
/*
 * Copyright (c) 2006-2008 LabKey Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
%>
<%@ page import="org.labkey.api.util.PageFlowUtil"%>
<%@ page import="org.labkey.api.exp.OntologyManager"%>
<%@ page import="org.labkey.api.exp.PropertyDescriptor"%>
<%@ page import="org.apache.beehive.netui.pageflow.PageFlowUtils"%>
<%
    String typeURI = form.typeURI;
    PropertyDescriptor[] pds = new PropertyDescriptor[0];
    if (null != typeURI)
        pds = OntologyManager.getPropertiesForType(typeURI, container);
%>
<form action="importData.view" method=POST>
    <table>
    <tr><td class=labkey-form-label width=150>Type URI</td><td><%=filter(form.typeURI)%><input type=hidden name="typeURI" value="<%=filter(form.typeURI)%>"></td></tr>
    <tr><td class=labkey-form-label width=150>Key Fields</td><td><%=filter(form.keys)%><input type=hidden name="keys" value="<%=filter(form.keys)%>"></td></tr>
        <tr><td class=labkey-form-label width=150>Tab delimited data (TSV)</td></tr>
        <tr><td colspan=2><textarea id=tsv name=tsv rows=25 cols=80 onchange="updateTSV(this, false)"><%=filter(form.tsv)%></textarea></td></tr>
    </table>
    <%=PageFlowUtil.generateSubmitButton("Submit")%>

    <br>&nbsp;
    <br>
    <div id=errors>
    <%
        String reshowErrors = PageFlowUtil.getStrutsError(request, "main");
        if (reshowErrors)
        {
            %>Submit errors:<br><%=reshowErrors%><%
        }
    %>
    </div>
    <p />
    <b>column map</b>
    <div id=columnMap>
    </div>
</form>


<script type="text/javascript">
var properties = [
<%  comma = '';
    for (pd in pds)
    {
    String range = pd.getRangeURI();
    if (range.startsWith("http://www.w3.org/2001/XMLSchema#"))
        range = range.substring("http://www.w3.org/2001/XMLSchema#".length());
    %><%=comma%>{uri:<%=PageFlowUtil.jsString(pd.getPropertyURI())%>,name:<%=PageFlowUtil.jsString(pd.getName())%>,id:<%=pd.getPropertyId()%>,range:<%=PageFlowUtil.jsString(range)%>}<%
    comma = ",\n";
    } %>];
var keys = {ptid:0, visit:0};

var fields = new Array();

function updateTSV(textbox, append)
{
    var select = document.getElementsByTagName("select")[0];
    select.length =0;
    var txt = textbox.value;
    var rows = txt.split("\n");

    if (rows.length < 2)
    {
      document.getElementById("errors").innerHTML = "<p>Paste data into text area, to validate and submit.</p>"
      return;
    }

    fields = new Array();
    for (var i = 0; i < rows.length; i++)
        fields[i] = rows[i].split("\t");

    updateMap(fields[0], append);
}


function updateMap(names, append)
{
    var html = "";
    var errors = "";
    var matched = {};

    for (k in keys)
        keys[k] = 0;

    for (var n=0 ; n<names.length ; n++)
    {
        var match = null;
        var matchURI = null;
        for (var p=0 ; p<properties.length ; p++)
        {
            if (properties[p].name.toLowerCase() == names[n].toLowerCase())
            {
                match = properties[p];
                break;
            }
            if (endsWith(properties[p].uri.toLowerCase(), '#'+names[n].toLowerCase()))
                matchURI = properties[p];
        }
        if (!match)
            match = matchURI;

        if (match)
        {
            if (match.uri in matched)
                errors += match.uri + " is used more than once.<br>";
            matched[match.uri] = 1;
        }

        var isKey = 0;
        if (names[n] in keys)
        {
            isKey = 1;
            keys[names[n]] = 1;
        }

        html += "<tr><td>" + (isKey ? "<b>" : "") + names[n] + (isKey? "<\/b>" : "") + "<\/td><td>";
        if (match)
            html += match.uri + "<\/td><td>" + match.range;
        else
            html += "<font class=labkey-error>no match<\/font>";
        html += "<\/td><\/tr>";
    }

    for (k in keys)
    {
        if (keys[k] == 0)
            errors += "The key field '" + k + "' was not found.";
    }

    if (errors)
        errors = "<p><font class=labkey-error>" + errors + "<\/font>";
    if (append)
        errors = document.getElementById("errors").innerHTML + errors;
    document.getElementById("errors").innerHTML = errors;
    document.getElementById("columnMap").innerHTML = html;
}


function endsWith(s, e)
{
    if (s.length < e.length)
        return false;
    s = s.substring(s.length-e.length);
    return s == e;
}

updateTSV(document.getElementById("tsv"), true);
</script>
