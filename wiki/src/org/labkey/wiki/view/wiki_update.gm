<%@ page import="org.labkey.api.util.PageFlowUtil"%>
<%@ page import="org.labkey.api.view.HttpView"%>
<%@ page import="org.labkey.api.wiki.WikiRendererType" %>
<%@ page import="org.labkey.wiki.model.Wiki" %>
<%@ page import="org.labkey.wiki.WikiController" %>
<%@ page import="java.util.List" %>
<%@ page import="org.springframework.validation.BindException" %>
<%@ page import="org.labkey.api.view.ViewContext" %>
<%@ page import="org.labkey.api.data.Container" %>
<%@ page import="org.springframework.validation.FieldError" %>
<%
    ViewContext context = HttpView.currentContext();
    Container c = context.getContainer();

    BindException errors = _errors;
    Wiki wiki = _wiki;
    WikiController.WikiDataForm form = _form;
    boolean useVisualEditor = _useVisualEditor;
    boolean hasScript = _hasScript;
    WikiRendererType currentRendererType = _currentRendererType;
%>

<script type="text/javascript">
    LABKEY.requiresScript('tiny_mce/tiny_mce.js');
    LABKEY.requiresScript('tiny_mce/init_tiny_mce.js');
    LABKEY.requiresYahoo()
</script>

<script language="javascript" type="text/javascript">
    InitTinyMCE();

    //if this is a reshow, we should set the dirty bit since the content wasn't actually saved yet
    LABKEY.setDirty(<%=_reshow%>);
</script>

<script type="text/javascript">
function findIdx(options, value)
{
  for (var i = 0; i < options.length; ++i)
  {
    if (options[i].value == value)
      return i;
  }
  return -1;
}


function changeRenderer()
{
    var ropts = document.editForm.rendererType.options;
    var idx = document.editForm.rendererType.selectedIndex;
    var oldIdx = findIdx(ropts, "<%=currentRendererType%>");

    var doConfirm = false;
    if (ropts[idx].value == "HTML" && ropts[oldIdx].value == "RADEOX")
      doConfirm = true;

    if (doConfirm)
    {
      var newName = ropts[idx].text;
      var oldName = ropts[oldIdx].text;
      if (!window.confirm("Are you sure you want to change from "+oldName+" to "+newName+"?  "+
                "Some of your markup may be lost."))
      {
          document.editForm.rendererType.selectedIndex = oldIdx;
          return false;
      }
    }
    LABKEY.setSubmit(true);
    document.editForm.action  = 'update.post'
    document.editForm.reshow.value = 'true';    // don't POST data, just reshow 
    document.editForm.submit();
    return true;
}

function getXmlHttpRequest()
{
    if(window.XMLHttpRequest)
    {
        try
        {
            return new XMLHttpRequest();
        }
        catch(e) {return null;}
    }
    else if(window.ActiveXObject)
    {
        try
        {
            return new ActiveXObject("Msxml2.XMLHTTP");
        }
        catch(e) {return null;}
    }
    return null;
}

function deleteAttachment(entityId, name, sourceElem)
{
    if(window.confirm("Are you sure you want to delete the attachment '" + name + "'? This cannot be undone."))
    {
        var urlDelete = "<%=_deleteUrl%>" + "entityId=" + entityId + "&name=" + name;
        var httpReq = getXmlHttpRequest();
        var errorMsg = null;
        if(!httpReq)
        {
            window.alert("Unable to communicate with the server!");
            return false;
        }

        document.body.style.cursor = "wait";
        var deletingMsg = document.createElement("SPAN");
        deletingMsg.innerHTML = "deleting...";
        sourceElem.parentNode.insertBefore(deletingMsg, sourceElem);
        sourceElem.style.display = "none";

        try
        {
            httpReq.open("GET", urlDelete, false);
            httpReq.send(null);
        }
        catch(e)
        {
            errorMsg = e;
        }

        document.body.style.cursor = "default";

        if(errorMsg || httpReq.status != 200)
        {
            errorMsg = "There was a problem deleting the attachment." + (errorMsg ? errorMsg : "");
            window.alert(errorMsg);
            deletingMsg.style.display = "none";
            sourceElem.style.display = "";
            return false;
        }

        //hide the table row for this attachment now that it's been deleted
        sourceElem.parentNode.parentNode.style.display = "none";
        return true;
    }
}

</script>

<form method="post" name="editForm" action="update.post" enctype="multipart/form-data" accept-charset="utf-8">
<table>
<%
    List mainErrors = errors.getGlobalErrors();
    if (null != mainErrors)
    {
        for (e in mainErrors)
        {
            %><tr><td colspan=2><span class="labkey-error"><%=context.getMessage(e)%></span></td></tr><%
        }
	}
%>
<td colspan=2 align=left>
    <input type="image" src="<%=PageFlowUtil.buttonSrc('Save')%>" onClick="document.editForm.nextAction.value = 'update'; LABKEY.setSubmit(true); return true;">
    <input type="image" src="<%=PageFlowUtil.buttonSrc('Finished')%>" onClick="document.editForm.nextAction.value = 'page'; LABKEY.setSubmit(true); return true;">
    <%
    if (currentRendererType==WikiRendererType.HTML)
    {
        String toggleText = useVisualEditor ? "Use HTML Source Editor" : "Use Visual HTML Editor";
        %><input type="image" src="<%=PageFlowUtil.buttonSrc(toggleText)%>" onClick="return toggleVisualEditor();"><%
    }%>
</td>
<tr>
    <td class="ms-searchform">Name</td><td class="normal">
    ${wiki.name}
    <input type="hidden" name="rowId" value="${wiki.rowId}">
    <input type="hidden" name="name" value="${wiki.name}">
    </td>
  </tr>
<%
    FieldError titleError = errors.getFieldError("title");
    if (null != titleError)
    {
        %><tr><td colspan=2 color=red><%=context.getMessage(titleError)%></td></tr><%
	}
%><tr>
      <td class="ms-searchform">Title</td>
      <td class="normal">
          <input type="text" size="60" name="title" onchange="LABKEY.setDirty(true);return true;" value="<%=PageFlowUtil.filter(form.getTitle())%>" >
      </td>
    </tr><%
    FieldError bodyError = errors.getFieldError("body");
    if (null != bodyError)
		{
		%><tr><td colspan=2><%=context.getMessage(bodyError)%></td></tr><%
		}
  %><tr>
        <td class="ms-searchform">Body</td>
    <%
    if (currentRendererType==WikiRendererType.HTML && useVisualEditor)
    {%>
        <td class="normal" style="width:100%;"><textarea id="mceEditor" class="mceEditor" cols="120" rows="25" name="body"><%=PageFlowUtil.filter(form.getBody())%></textarea></td>
    <%}
    else
    {%>
        <td class="normal" style="width:100%;"><textarea class="mceNoEditor" cols="120" rows="25" name="body" onchange="LABKEY.setDirty(true);return true;" style="width:100%;"><%=PageFlowUtil.filter(form.getBody())%></textarea></td>
    <%}%>
    </tr>
    <tr>
        <td class="ms-searchform">Render As</td>
        <td class="normal">
            <select id="rendererType" name="rendererType" onChange="changeRenderer()">

                  <%
                    for (entry in WikiRendererType.values())
                    {
                        def value = entry.name();
                        def displayName = entry.getDisplayName();
                        def selected = entry == currentRendererType ? "selected" : "";
                        %>
                          <option <%=selected%> value="<%=value%>"><%=displayName%></option>
                        <%
                     }%>
            </select>
        </td>
    </tr>
    <tr>
        <td class="ms-searchform">Attachments</td>
        <td class="normal">
            <table>
                <tr>
                    <td>
                        <table>
                        <%
                            boolean hasAttachments = false;
                            for (attach in wiki.attachments)
                                {
                                    hasAttachments = true;
                                    out.print("<tr><td><img src=\"" + request.getContextPath() + attach.fileIcon + "\" alt=\"icon\"/></td>");
                                    out.print("<td>" + PageFlowUtil.filter(attach.name) + "</td>");
                                    out.print("<td>[<a href=\"javascript:{}\" onClick=\"deleteAttachment('");
                                    out.print(attach.parent);
                                    out.print("','");
                                    out.print(attach.name);
                                    out.print("', this);\" style=\"color:green;\">");
                                    out.print("Delete");
                                    out.print("</a>]</td>");
                                    out.print("</tr>\n");
                                }
                        %>
                        </table>
                    </td>
                </tr>
            </table>
            <table id="filePickerTable">
                <!-- TODO: show existing atttachments -->
            </table>
            <table>
              <tr>
                  <td colspan=2>
                      <a href="javascript:addFilePicker('filePickerTable', 'filePickerLink')" id="filePickerLink">
                        <img src="<%=request.getContextPath()%>/_images/paperclip.gif" alt="Clip"/><%=hasAttachments ? "Attach another file" : "Attach a file"%>
                      </a>
                   </td>
              </tr>
            </table>
        </td>
    </tr>
    <tr>
    <td colspan=2 align=left>
        <input type="image" src="<%=PageFlowUtil.buttonSrc('Save')%>" onClick="document.editForm.nextAction.value = 'update'; LABKEY.setSubmit(true); return true;">
        <input type="image" src="<%=PageFlowUtil.buttonSrc('Finished')%>" onClick="document.editForm.nextAction.value = 'page'; LABKEY.setSubmit(true); return true;">
        <%
        if (currentRendererType==WikiRendererType.HTML)
        {
            String toggleText = useVisualEditor ? "Use HTML Source Editor" : "Use Visual HTML Editor";
            %><input type="image" src="<%=PageFlowUtil.buttonSrc(toggleText)%>" onClick="return toggleVisualEditor();"><%
        }%>
        <input type="hidden" name="nextAction" value="false">
        <input type="hidden" name="reshow" value="false">
    </td>
  </tr>
</table>
<%
    HttpView helpView = currentRendererType.getSyntaxHelpView();
    if (currentRendererType.equals(WikiRendererType.HTML))
        helpView.addObject("useVisualEditor", useVisualEditor);
    currentView.include(helpView);
%>
<input type="hidden" name="redirect" value="<%=PageFlowUtil.filter(form.getRedirect())%>">
</form>
<script type="text/javascript">
var wikiEditor = {
    origBody:"",
    useVisualEditor:<%=useVisualEditor?"true":"false"%>, 
    hasScript:<%=hasScript?"true":"false"%>
};
wikiEditor.origBody = getWikiBody().value;
wikiEditor.isDirty = function ()
{
    var inst = tinyMCE.getInstanceById("mce_editor_0");
    if (inst && inst.isDirty())
        return true;
    var mceBody = getWikiBody();
    if (mceBody)
        return mceBody.value != wikiEditor.origBody;
    return false;
}
// I don't think YAHOO.util.Event.addListener() will work propertly for onbeforeunload
//YAHOO.util.Event.addListener(window, "beforeunload", wikiEditor.beforeunload);
window.onbeforeunload = LABKEY.beforeunload(wikiEditor.isDirty);

function toggleVisualEditor()
{
    if (!wikiEditor.useVisualEditor && wikiEditor.hasScript)
    {
        if (!window.confirm("Warning: the visual editor will strip forms and script from your HTML source.  Continue?"))
            return false;
    }
    document.editForm.nextAction.value = wikiEditor.useVisualEditor ? 'toggleVisualEditorOff' : 'toggleVisualEditorOn';
    document.editForm.reshow.value = 'true';    // don't POST data, just reshow
    document.editForm.action='update.post';
    LABKEY.setSubmit(true);
    return true;
}

function getWikiBody()
{
    return document.getElementsByName("body")[0];    
}
</script>